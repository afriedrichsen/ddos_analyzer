version: "3.2"
services:
# Here is our image for the data lake backend (Cloudera Quickstart VM).
  datalake:
    image: cloudera/quickstart:latest
    ports:
      - "8887:8888"   # Hue server
      - "2181:2181"   # ZooKeeper
      - "8889:8889"   # jupyter
      - "10020:10020" # mapreduce job history server
      - "8022:22"     # ssh
      - "7180:7180"   # Cloudera Manager
      - "11000:11000" # Oozie
      - "50070:50070" # HDFS REST Namenode
      - "50075:50075" # hdfs REST Datanode
      - "8088:8088"   # yarn resource manager webapp address
      - "19888:19888" # mapreduce job history webapp address
      - "8983:8983"   # Solr console
      - "8032:8032"   # yarn resource manager access
      - "8042:8042"   # yarn node manager
      - "60010:60010" # hbase
    hostname: lakeuat.cloudera
    privileged: true
    command: bash -c "/usr/bin/docker-quickstart"
    stdin_open: true
    tty: true
    volumes:
      - /data/ddos_analyzer:/data/core
    networks:
      - cloudera-webnet
    deploy:
      restart_policy:
        condition: on-failure
  # Here is our Kafka cluster. In swarm mode we can only scale in "global" mode (one kafka server/instance per swarm node/host).
  kafka:
    image: afriedrichsen/kafka
    deploy:
      mode: global
    depends_on:
      - zoo1
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: datalake:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_PROTOCOL_NAME: INSIDE
      KAFKA_PORT: 9092
      KAFKA_CREATE_TOPICS: "LogProcessing:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
     - cloudera-webnet
 # Here is our log harvester. This container can be easily scaled.
  harvester:
    image: afriedrichsen/harvester:latest
    depends_on:
      - kafka
    networks:
      - cloudera-webnet
  # Here is our log indexer (Apache Flume).
  indexer:
    image: afriedrichsen/indexer:latest
    depends_on:
      - kafka
    networks:
      - cloudera-webnet
networks:
  cloudera-webnet: